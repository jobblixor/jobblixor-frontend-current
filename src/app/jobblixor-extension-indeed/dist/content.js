window.__JOBBLIXOR_LOADED__||(window.__JOBBLIXOR_LOADED__=!0,(()=>{let y=!1,w=!1,O=null,k=null,D=!1,S=!1,B=null,A=1,J=0,U=new Set;function Z(){return`${Date.now()}_${Math.random().toString(36).substr(2,8)}`}function P(){return O||(O=Z(),localStorage.setItem("jobblixor_session_id",O)),O}const _=`${Date.now()}_${Math.random().toString(36).substr(2,8)}`;let E=!0;chrome.storage.local.remove(["jobblixor_global_stop"],()=>{console.log("[Cleanup] Cleared stale global stop flag")}),chrome.storage.local.get(["jobblixor_global_stop"],e=>{e.jobblixor_global_stop&&(E=!1,w=!0,y=!1,q(),L())}),chrome.storage.onChanged.addListener((e,o)=>{o==="local"&&e.jobblixor_global_stop&&e.jobblixor_global_stop.newValue&&(E=!1,w=!0,y=!1,q(),L())});const h="jobblixor_session_lock",N=3e4;let x=null;async function ee(){if(!E)return console.log("[Lock] Instance not active, will not acquire lock"),!1;const e=P(),o=Date.now();return new Promise(n=>{chrome.storage.local.get([h],r=>{const t=r[h];if(t&&o-t.timestamp>N){console.log("[Lock] Clearing expired lock (longer timeout)"),chrome.storage.local.remove([h],()=>{chrome.storage.local.set({[h]:{sessionId:e,timestamp:o,instanceId:_,tabId:window.tabId||"unknown"}},()=>{console.log("[Lock] Acquired lock after clearing expired"),x&&clearInterval(x),x=setInterval(j,5e3),n(!0)})});return}!t||t.sessionId===e||t.instanceId===_?chrome.storage.local.set({[h]:{sessionId:e,timestamp:o,instanceId:_,tabId:window.tabId||"unknown"}},()=>{console.log("[Lock] Acquired orchestrator lock"),x&&clearInterval(x),x=setInterval(j,5e3),n(!0)}):(console.log("[Lock] Lock held by another session/instance",t),n(!1))})})}function j(){const e=P();chrome.storage.local.set({[h]:{sessionId:e,timestamp:Date.now(),instanceId:_,tabId:window.tabId||"unknown"}})}function q(){const e=P();x&&(clearInterval(x),x=null),chrome.storage.local.get([h],o=>{const n=o[h];n&&(n.sessionId===e||n.instanceId===_)&&chrome.storage.local.remove([h],()=>{console.log("[Lock] Released orchestrator lock")})})}async function M(){return new Promise(e=>{chrome.storage.local.get([h],o=>{const n=o[h];n&&Date.now()-n.timestamp<N?e({isRunning:!0,instanceId:n.instanceId}):e({isRunning:!1})})})}async function H(e,o=null){if(console.log("[Orchestrator] ===== START CALLED ====="),console.log("[Orchestrator] userProfile:",e),console.log("[Orchestrator] resumeFromState:",o),!E)return console.log("[Orchestrator] Instance not active, aborting start"),{success:!1,reason:"instance_inactive"};const n=await M();if(n.isRunning&&n.instanceId!==_)return console.log("[Orchestrator] Another orchestrator is actively running"),{success:!1,reason:"another_instance_active"};if(console.log("[Orchestrator] Attempting to start..."),y)return console.log("[Orchestrator] Already running, aborting"),{success:!1,reason:"already_running"};const r=await ee();if(console.log("[Orchestrator] Lock acquired, state:",{globalOrchestratorRunning:y,globalStopped:w,resumeFromState:!!o}),!r)return console.log("[Orchestrator] Could not acquire lock"),{success:!1,reason:"lock_not_acquired"};y=!0,w=!1,chrome.runtime.sendMessage({type:"GET_CURRENT_TAB_ID"},l=>{l&&l.id&&(chrome.runtime.sendMessage({type:"REGISTER_ORCHESTRATOR",tabId:l.id}),console.log("[Orchestrator] Registered with background.js, tab:",l.id))});let t={isRunning:!0,currentJobIndex:o?.currentJobIndex||0,targetJobs:e.targetJobs,email:e.email,jobTitle:e.job_title,location:e.location,startTime:Date.now(),userProfile:e,successfulApplications:o?.successfulApplications||0,waitingForSearch:!1};o&&typeof o.waitingForSearch<"u"&&(t.waitingForSearch=o.waitingForSearch),await G(t),console.log("[Orchestrator] Starting with profile:",e);try{if(o)console.log("[Orchestrator] RESUMING - will NOT navigate, resumeFromState:",o),console.log("[Orchestrator] Resuming - waiting for search results to load...");else{console.log("[Orchestrator] NEW SEARCH - will navigate"),t.waitingForSearch=!0,await G(t),await ne(e);return}await re(),t.waitingForSearch=!1,await G(t);const l=Y();if(l.length===0){console.log("[Orchestrator] No jobs found");const a=document.querySelectorAll("[data-jk]");return console.log(`[Orchestrator][Debug] jobCardElements.length: ${a.length}`),a.length===0?console.log("[Orchestrator][Debug] No [data-jk] elements found on the page."):a.forEach((u,c)=>{console.log(`[Orchestrator][Debug] JobCard[${c}]:`,u.outerHTML)}),await L(),{success:!1,reason:"no_jobs"}}const s=parseInt(t.userProfile.targetJobs)||10;let i=t.successfulApplications||0,d=t.currentJobIndex||0;for(let a=d;a<l.length&&i<s;a++){if(w||!E){console.log("[Orchestrator] Stopped by user or instance deactivated");break}if(await X()){console.log("[Orchestrator] Page anomaly detected and recovery attempted"),await m(5e3);const $=Y();if($.length===0){console.log("[Orchestrator] No jobs found after recovery - ending session");break}if(l=$,a>=l.length){console.log("[Orchestrator] Job index out of range after recovery");break}}const c=l[a];if(console.log(`[Orchestrator] Processing job ${a+1}: ${c.title}`),await le(c),await m(2e3),!await ie(c.title)){console.log(`[Orchestrator] Panel timeout for ${c.title} - skipping to next job`);continue}const p=await z();if(!p.isEasyApply){console.log(`[Orchestrator] Not Easy Apply: ${c.title} - skipping to next job (${p.reason||""})`);continue}console.log(`[Orchestrator] Opening Easy Apply for ${c.title}`),t.currentJobIndex=a,t.successfulApplications=i,await G(t);const C=await te(c,t.userProfile.email);C.success?(i++,t.successfulApplications=i,t.currentJobIndex=a+1,await G(t),console.log(`[Orchestrator] Application ${i} completed`)):console.log(`[Orchestrator] Application failed: ${C.error} - skipping to next job`),await m(1e3)}return console.log(`[Orchestrator] Completed! ${i} applications`),await L(),{success:!0,applications:i}}catch(l){return console.error("[Orchestrator] Error:",l),await L(),{success:!1,error:l.message}}finally{y=!1,E=!1,q(),console.log("[Orchestrator] Cleanup completed")}}const I="orchestrator_state";async function G(e){return new Promise(o=>{chrome.storage.local.set({[I]:e},o)})}async function K(){return new Promise(e=>{chrome.storage.local.get([I],o=>{e(o[I]||null)})})}async function L(){return new Promise(e=>{chrome.storage.local.remove([I],e)})}async function te(e,o){const n=Date.now();if(n-Q<qe)return console.log("[EasyApply] Click debounced - too recent"),{success:!1,error:"Click debounced"};Q=n;const r=await new Promise(t=>{chrome.runtime.sendMessage({type:"CHECK_EASY_APPLY_TAB_EXISTS",jobId:e.jobId},t)});if(r&&r.tabExists)return console.log("[EasyApply] Easy Apply tab already exists for this job"),{success:!1,error:"Tab already exists"};console.log(`[EasyApply] Attempting to click Easy Apply for ${e.title}`);try{const t=await z();return t.isEasyApply?(t.button.click(),console.log("[EasyApply] Clicked Easy Apply button, waiting for completion signal..."),await oe(e.title),{success:!0}):{success:!1,error:t.reason||"Not an Easy Apply job"}}catch(t){return console.error(`[EasyApply] Error for ${e.title}:`,t),{success:!1,error:t.message}}}async function oe(e){return new Promise(o=>{const n=r=>{r.type==="JOB_DONE"&&(chrome.runtime.onMessage.removeListener(n),console.log(`[Orchestrator] Job completed instantly: ${e}`),o())};chrome.runtime.onMessage.addListener(n),setTimeout(()=>{chrome.runtime.onMessage.removeListener(n),o()},12e4)})}async function ne(e){console.log("[Search] Performing job search via URL navigation...");let o=e.job_title||"software engineer";if(e.preferred_salary){const l=e.preferred_salary.replace(/\$/g,"");o+=` $${l}`,console.log(`[Search] Added salary to search query: "${o}"`)}const n=encodeURIComponent(o),r=encodeURIComponent(e.location||"New York, NY"),t=`https://www.indeed.com/jobs?q=${n}&l=${r}&from=searchOnHP`;console.log("[Search] Navigating to:",t),window.location.href=t,await m(5e3)}async function re(){console.log("[Search] Waiting for results...");for(let e=0;e<30;e++){const o=document.querySelectorAll("[data-jk]");if(o.length>0)return console.log(`[Search] Found ${o.length} job cards`),!0;await m(500)}throw new Error("Search results not loaded")}function Y(){const e=document.querySelectorAll("[data-jk]"),o=[];return e.forEach((n,r)=>{const t=n.querySelector("h2 span[title], h2 a"),l=t?t.textContent.trim():`Job ${r+1}`,s=n.getAttribute("data-jk")||`job_${r}_${Date.now()}`;o.push({element:n,title:l,jobId:s,index:r})}),o}async function le(e){console.log(`[Click] Clicking job card: ${e.title}`),e.element.scrollIntoView({behavior:"smooth",block:"center"}),await m(500);const o=e.element.querySelector("h2 a");o?o.click():e.element.click()}async function ie(e){console.log(`[Panel] Waiting for job details panel: ${e}`);for(let o=0;o<20;o++){const n=document.querySelector(".jobsearch-ViewjobPaneWrapper, .jobsearch-JobComponent"),r=document.querySelector(".jobsearch-IndeedApplyButton");if(n&&r)return console.log(`[Panel] Panel ready for ${e}`),!0;await m(300)}return!1}async function z(){console.log("[EasyApply] Starting apply button detection..."),await m(2e3);const e=['button[data-jk*="apply"]','button[aria-label*="Apply"]','button[data-testid*="apply"]',".ia-BaseCTAButton",".indeed-apply-button-label",".jobsearch-IndeedApplyButton button","button[data-indeed-apply-jobid]","a[data-indeed-apply-jobid]",'button[class*="apply"]','a[class*="apply"]'];let o=null;for(const s of e)try{if(s.includes(":contains")){const i=s.split(":")[0],d=s.match(/\"(.+?)\"/)[1].toLowerCase(),a=Array.from(document.querySelectorAll(i)).filter(u=>(u.textContent||"").toLowerCase().includes(d));if(a.length>0){o=a[0],console.log(`[EasyApply] Found button with text selector: ${s}`);break}}else{const i=document.querySelectorAll(s);if(i.length>0){o=i[0],console.log(`[EasyApply] Found button with selector: ${s}`);break}}}catch(i){console.log(`[EasyApply] Selector failed: ${s}`,i)}if(!o)return console.log("[EasyApply] No apply button found with any selector"),{isEasyApply:!1,reason:"No apply button found"};const n=o.textContent.toLowerCase().trim(),r=o.getAttribute("aria-label")?.toLowerCase()||"",t=n+" "+r;return console.log(`[EasyApply] Button text analysis: "${t}"`),t.includes("easy apply")||t.includes("apply now")||t.includes("apply")&&!t.includes("company site")&&!t.includes("external")?(console.log(`[EasyApply] Confirmed Easy Apply button: "${t}"`),{isEasyApply:!0,button:o,buttonText:t}):(console.log(`[EasyApply] Not Easy Apply: "${t}"`),{isEasyApply:!1,reason:"Not an Easy Apply job",buttonText:t})}function m(e){return new Promise(o=>setTimeout(o,e))}chrome.runtime.onMessage.addListener(async(e,o,n)=>{if(console.log("[Message] Received:",e.type),e.type==="START_AUTO_APPLY"){console.log("[Message] ⚡️ START_AUTO_APPLY received"),console.log("[Message] Current URL:",window.location.href),console.log("[Message] Job Title:",e.jobTitle),console.log("[Message] Location:",e.location);const r=await W(e.email),t={job_title:e.jobTitle||r.job_title||"software engineer",location:e.location||r.location||"New York, NY",targetJobs:e.jobCount||10,email:e.email,preferred_salary:r.preferred_salary},l=await H(t);return n(l),!0}if(e.type==="STOP_AUTO_APPLY")return console.log("[Stop] Stopping orchestrator"),w=!0,y=!1,E=!1,Te(),q(),await L(),n({success:!0}),!0;if(e.type==="PING")return n({success:!0,message:"Content script loaded"}),!0;if(e.type==="RUN_PHASE1_AUTOFILL")return await F(e.email),n({success:!0}),!0;if(e.type,e.type==="PHASE_1_DONE"){console.log("[PHASE_1_DONE] RECEIVED BY ORCHESTRATOR!"),console.log("[Orchestrator] Current state check:",{globalOrchestratorRunning:y,instanceActive:E,globalStopped:w});const r=await K();return r&&r.isRunning?(console.log("[Orchestrator] Updating job index after PHASE_1_DONE"),r.currentJobIndex=(r.currentJobIndex||0)+1,await G(r)):console.log("[Orchestrator] WARNING: No active orchestrator state found for PHASE_1_DONE"),n({success:!0}),!0}return e.type==="JOBBLIXOR_START_APPLY"&&e.email?(A=e.jobCount||1,J=0,U.clear(),ae(e.email),D=!0,S=!1,U.add(window.location.href),await F(e.email),D=!1,n({success:!0}),console.log("[Jobblixor DEBUG] Bot started and continuous monitoring enabled."),!0):e.type==="JOBBLIXOR_PAUSE"?(S=!0,f(k,"Bot paused by user"),n({success:!0}),!0):e.type==="JOBBLIXOR_RESUME"?(S=!1,f(k,"Bot resumed by user"),n({success:!0}),!0):e.type==="JOBBLIXOR_STOP"?(S=!1,R(),f(k,"Bot stopped by user"),n({success:!0}),!0):(n({success:!1,error:"Unknown message type"}),!0)}),window.addEventListener("beforeunload",()=>{console.log("[Cleanup] Page unloading, releasing lock"),E=!1,w=!0,y=!1,q()}),console.log("[ContentScript] Single Orchestrator System Loaded"),console.log("[Jobblixor DEBUG] content.js loaded on page:",window.location.href);function ae(e){k=e,console.log("[Jobblixor DEBUG] Starting continuous monitoring with email:",e),B&&clearInterval(B),B=setInterval(()=>{se()},3e3)}function R(){console.log("[Jobblixor DEBUG] Stopping continuous monitoring"),k=null,D=!1,S=!1,U.clear(),B&&(clearInterval(B),B=null)}function se(){const e=window.location.href;if(D||S||!k)return;if(console.log("[Jobblixor DEBUG] Monitoring URL:",e),console.log("[Jobblixor DEBUG] Processed pages:",Array.from(U)),U.has(e)){console.log("[Jobblixor DEBUG] Page already processed, skipping:",e);return}if(J>=A){f(k,`Target of ${A} applications reached!`),R();return}console.log("[Jobblixor DEBUG] Checking if URL is application page:",e);const o=ce(e);console.log("[Jobblixor DEBUG] Is application page:",o),o?(console.log("[Jobblixor DEBUG] Auto-starting bot on NEW page:",e),U.add(e),D=!0,setTimeout(()=>{F(k).then(()=>{D=!1}).catch(n=>{console.error("[Jobblixor DEBUG] Auto-start error:",n),D=!1,U.delete(e)})},1500)):console.log("[Jobblixor DEBUG] Not an application page, continuing to monitor")}function ce(e){const n=["form/questions-module","form/demographic-questions","form/resume-selection-module","form/contact-module","form/contact-info-module","form/profile-location","beta/indeedapply/form","/apply","/job-application","/application/","/questions/","/demographic/","/resume-selection","/contact-information"].filter(s=>e.includes(s)),r=n.length>0;console.log("[Jobblixor DEBUG] URL pattern check:",e),console.log("[Jobblixor DEBUG] Matched patterns:",n);const t=document.querySelector('button[type="submit"]')||document.querySelector('input[type="submit"]')||document.querySelector("button")||document.querySelector('[data-testid*="continue"]')||document.querySelector('[data-testid*="submit"]')||Array.from(document.querySelectorAll("button")).find(s=>/continue|submit|next|review|apply/i.test(s.textContent||s.innerText||"")),l=r||e.includes("indeed.com")&&t;return l&&console.log("[Jobblixor DEBUG] Detected application page:",e),l}async function F(e){try{if(S){f(e,"Bot is paused. Click Resume to continue.");return}console.log("[Jobblixor DEBUG] startJobblixorBot called with:",e);const o=await W(e);console.log("[Jobblixor DEBUG] Fetched user profile:",o),f(e,"Starting Jobblixor auto-apply bot...");const n=he(o);n>0&&f(e,`Answered ${n} screening questions`),await v(1e3,3e3),window.location.href.includes("resume-selection")?(console.log("[Jobblixor DEBUG] On resume selection page - resume appears ready"),f(e,"Resume page detected - proceeding to Continue")):me()&&f(e,"Handled resume selection page");const t=await Se();t>0&&f(e,`Force-checked ${t} availability checkboxes`);const l=_e(o);let s=!1;l.forEach(u=>{u.value&&Ge(u.keywords,u.value)&&(f(e,`Filled one of ${u.keywords.join("/")} with "${u.value}"`),s=!0)}),await v(800,2e3),Le();let i=!1,d=!1;if(o.resume){const u=await Je(o.resume);i=u.uploaded,d=u.clickedContinue}if(!s&&!i&&n===0&&($e()?f(e,"No known fields matched on this form step."):f(e,"No fillable fields detected. Manual input may be required.")),Oe()&&(f(e,"Dismissed error popup, forcing automation to continue..."),await new Promise(u=>setTimeout(u,1500))),!d){console.log("[Jobblixor DEBUG] Waiting for form validation and data persistence..."),await v(2e3,4e3);const u=await V(o);u.isComplete||(console.log("[Jobblixor DEBUG] Form not complete, attempting to fill missing fields..."),await be(u.missingFields,o),await v(1e3,2e3));const c=Array.from(document.querySelectorAll('button, input[type="submit"]')).find(b=>/next|continue|submit|review.*application|apply|proceed/i.test(b.innerText||b.value));if(c){const b=await V(o);(c.disabled||c.getAttribute("aria-disabled")==="true")&&(console.log("[Jobblixor DEBUG] Continue button is disabled - form likely incomplete"),f(e,"Continue button disabled - checking for missing required fields..."),await pe(o),await v(500,1e3)),!c.disabled&&c.getAttribute("aria-disabled")!=="true"?(await v(300,800),await Ie(c),f(e,`Clicked Continue button (${b.filledCount} fields filled)`)):f(e,"Continue button still disabled - may require manual intervention")}else console.log("[Jobblixor DEBUG] No Continue button found.")}if(f(e,"Step complete! Bot waiting for next page..."),window.location.href.includes("application-submitted")||window.location.href.includes("thank-you")||window.location.href.includes("confirmation")||window.location.href.includes("success")||window.location.href.includes("post-apply")||document.querySelector(".application-complete")||document.querySelector('[data-testid="application-complete"]')||document.querySelector('[data-testid*="success"]')||document.querySelector('[data-testid*="submitted"]')||Array.from(document.querySelectorAll("h1, h2")).find(u=>/application.*submitted|thank.*you|success|complete/i.test(u.textContent||""))){console.log('[Jobblixor DEBUG] ðŸ"¥ DETECTED COMPLETION PAGE:',window.location.href),console.log("[Jobblixor DEBUG] Page elements check:",{hasApplicationComplete:!!document.querySelector(".application-complete"),hasTestId:!!document.querySelector('[data-testid="application-complete"]'),hasH1H2:!!Array.from(document.querySelectorAll("h1, h2")).find(p=>/application.*submitted|thank.*you|success|complete/i.test(p.textContent||""))});const c=`completion_${new URLSearchParams(window.location.search).get("jk")||Date.now()}_${e}`,b=localStorage.getItem(c);console.log("[Jobblixor DEBUG] Already processed?",b),b?console.log("[Jobblixor DEBUG] Application already processed, skipping duplicate"):(console.log('[Jobblixor DEBUG] ðŸ"¤ ABOUT TO SEND APPLICATION_COMPLETED MESSAGE'),localStorage.setItem(c,Date.now().toString()),J++,f(e,`APPLICATION ${J} SUBMITTED SUCCESSFULLY!`),chrome.runtime.sendMessage({type:"GET_CURRENT_TAB_ID"},async p=>{const C={completed:!0,email:e,jobId:window.location.href,timestamp:Date.now(),tabId:p?.id};chrome.storage.local.set({last_application_completion:C},()=>{console.log("[Jobblixor DEBUG] Wrote completion to storage:",C),chrome.runtime.sendMessage({type:"APPLICATION_COMPLETED",email:e,completionKey:c,tabId:p?.id,closeTabNow:!0}),console.log("[Jobblixor DEBUG] Requested background to close tab:",p?.id)})})),J>=A?(f(e,`Target of ${A} applications reached!`),chrome.runtime.sendMessage({type:"APPLICATION_FLOW_COMPLETE",email:e}),R()):f(e,`Progress: ${J}/${A} applications completed`),console.log("[Jobblixor DEBUG] Application completed!")}else f(e,"Waiting for page navigation to continue automatically..."),console.log("[Jobblixor DEBUG] Current URL:",window.location.href),console.log("[Jobblixor DEBUG] Continuous monitoring will handle next page automatically")}catch(o){f(e,`Error: ${o}`),console.error("[Jobblixor DEBUG] ERROR in main automation:",o)}}async function V(e){const o=ue(),n=[];let r=0;console.log(`[Jobblixor DEBUG] Validating ${o.length} required fields...`);for(const l of o)de(l)?(n.push(l),console.log(`[Jobblixor DEBUG] Missing required field: ${ge(l)}`)):r++;const t=n.length===0;return console.log(`[Jobblixor DEBUG] Form validation: ${r}/${o.length} filled, complete: ${t}`),{isComplete:t,missingFields:n,filledCount:r,totalRequired:o.length}}function ue(){const e=["input[required]","select[required]","textarea[required]",'input[aria-required="true"]','select[aria-required="true"]','textarea[aria-required="true"]','input[data-testid*="required"]','select[data-testid*="required"]'],o=[];return e.forEach(n=>{document.querySelectorAll(n).forEach(r=>{r.offsetParent!==null&&!r.disabled&&o.push(r)})}),document.querySelectorAll("input, select, textarea").forEach(n=>{if(n.offsetParent!==null&&!n.disabled){const t=(n.labels?.[0]||document.querySelector(`label[for="${n.id}"]`))?.textContent||"";(t.includes("*")||t.toLowerCase().includes("required"))&&(o.includes(n)||o.push(n))}}),o}function de(e){if(e.type==="radio"){const o=e.name,n=document.querySelectorAll(`input[type="radio"][name="${o}"]`);return!Array.from(n).some(r=>r.checked)}return e.type==="checkbox"?!e.checked:e.tagName==="SELECT"?!e.value||e.value===""||e.selectedIndex===0:!e.value||e.value.trim()===""}async function be(e,o){console.log(`[Jobblixor DEBUG] Attempting to fill ${e.length} missing fields...`);for(const n of e)await fe(n,o),await v(200,500)}async function pe(e){console.log("[Jobblixor DEBUG] Final attempt to fill critical required fields...");const o=[{selectors:['input[type="tel"]','input[name*="phone"]'],value:e.phone_number},{selectors:['input[type="email"]','input[name*="email"]'],value:e.email},{selectors:['input[name*="first"]','input[id*="first"]'],value:e.first_name},{selectors:['input[name*="last"]','input[id*="last"]'],value:e.last_name}];for(const n of o)for(const r of n.selectors){const t=document.querySelectorAll(r);for(const l of t)l.offsetParent!==null&&(!l.value||l.value.trim()==="")&&(console.log(`[Jobblixor DEBUG] Critical fill: ${r} with "${n.value}"`),g(l,n.value),await v(100,300))}}async function fe(e,o){const n=e.name?.toLowerCase()||e.id?.toLowerCase()||"";if(e.type==="email"&&o.email){g(e,o.email);return}if(e.type==="tel"&&o.phone_number){g(e,o.phone_number);return}if(n.includes("first")&&o.first_name){g(e,o.first_name);return}if(n.includes("last")&&o.last_name){g(e,o.last_name);return}if(n.includes("zip")&&o.zip_code){g(e,o.zip_code);return}if(n.includes("address")&&o.street_address){g(e,o.street_address);return}if(n.includes("city")&&o.location){g(e,o.location);return}if(n.includes("ethnicity")&&o.ethnicity){g(e,o.ethnicity);return}if(n.includes("gender")&&o.gender){g(e,o.gender);return}if(n.includes("veteran")&&o.veteran_status){g(e,o.veteran_status);return}for(const r in o)if(typeof o[r]=="string"&&o[r]&&n.includes(r)){g(e,o[r]);return}}function ge(e){return e.labels&&e.labels.length>0?e.labels[0].textContent.trim():e.id?`#${e.id}`:e.name?`name='${e.name}'`:e.placeholder?`placeholder='${e.placeholder}'`:e.outerHTML.slice(0,60)+"..."}function W(e){return console.log("[Jobblixor DEBUG] fetchUserProfile called with:",e),new Promise(o=>{const n={first_name:"Livia",last_name:"DeMori",email:e,phone_number:"3524434968",location:"New York, NY",zip_code:"10001",street_address:"123 Main Street",years_experience:"2-3",gender:"female",ethnicity:"asian",veteran_status:"no",hispanic_latino:"no",over_18:"yes",authorized_us:"yes",require_sponsorship:"no",preferred_salary:"$50,000",job_title:"software engineer"};chrome.storage.local.get(["jobblixor_uid"],async r=>{const t=r.jobblixor_uid;if(!t){console.warn("[Jobblixor DEBUG] No UID found - user not authenticated"),o(n);return}chrome.runtime.sendMessage({type:"FETCH_USER_DOC",uid:t},async l=>{if(console.log("[Jobblixor DEBUG] FETCH_USER_DOC response:",l),l?.success)try{const i=(await chrome.storage.local.get([`user_profile_${t}`]))[`user_profile_${t}`];if(i){console.log("[Jobblixor DEBUG] Retrieved from storage:",i);const d={...n,...i};o(d)}else console.warn("[Jobblixor DEBUG] No data in chrome.storage - using fallback"),o(n)}catch(s){console.error("[Jobblixor DEBUG] Storage read error:",s),o(n)}else console.warn("[Jobblixor DEBUG] Fetch failed, using fallback"),o(n)})})})}function he(e){console.log("[Jobblixor DEBUG] Checking for screening questions...");let o=0;const n=[{patterns:["18 years of age","18 years or older","at least 18","eighteen years"],answer:"yes",profileKey:"over_18"},{patterns:["authorized to work","right to work","eligible to work","work authorization"],answer:"yes",profileKey:"authorized_us"},{patterns:["require sponsorship","need sponsorship","visa sponsorship","work visa"],answer:"no",profileKey:"require_sponsorship"},{patterns:["years of experience","relevant experience","work experience"],answer:e.years_experience||"0-2",profileKey:"years_experience"},{patterns:["willing to relocate","open to relocation","relocate for"],answer:"yes",profileKey:"willing_relocate"},{patterns:["available to start","start date","when can you start"],answer:"immediately",profileKey:"start_date"},{patterns:["availability to work","general availability","available to work"],answer:"all",profileKey:"availability"},{patterns:["full time or part time","full time and part time","work schedule","employment type"],answer:"both full time and part time",profileKey:"schedule_preference"},{patterns:["nights","night shifts","overnight"],answer:"yes",profileKey:"nights_available"},{patterns:["days","day shifts","daytime"],answer:"yes",profileKey:"days_available"},{patterns:["holidays","holiday work"],answer:"yes",profileKey:"holidays_available"},{patterns:["weekends","weekend work"],answer:"yes",profileKey:"weekends_available"},{patterns:["please enter your gender","enter your gender","gender"],answer:e.gender||"not declared",profileKey:"gender"},{patterns:["please enter your ethnicity","enter your ethnicity","ethnicity"],answer:e.ethnicity||"prefer not to answer",profileKey:"ethnicity"},{patterns:["please enter your veteran status","enter your veteran status","veteran status"],answer:e.veteran_status||"i am not a veteran",profileKey:"veteran_status"},{patterns:["do you identify as hispanic","hispanic/latino","hispanic","latino"],answer:e.hispanic_latino||"no",profileKey:"hispanic_latino"},{patterns:["share these answers","terms and conditions","consent","agree"],answer:"yes",profileKey:"consent_sharing"}],r=Array.from(document.querySelectorAll("p, div, label, legend, h3, h4")).filter(t=>{const l=t.textContent.toLowerCase();return l.includes("?")&&l.length>10&&l.length<200});return console.log(`[Jobblixor DEBUG] Found ${r.length} potential questions`),we(),r.forEach(t=>{const l=t.textContent.toLowerCase();console.log(`[Jobblixor DEBUG] Analyzing question: "${l}"`);const s=n.find(i=>i.patterns.some(d=>l.includes(d)));if(s){console.log(`[Jobblixor DEBUG] Matched rule for: ${s.patterns[0]}`);let i=e[s.profileKey]||s.answer;const d=t.closest("div, fieldset, form")||t.parentElement;if(d){if(s.answer==="all"){const $=d.querySelectorAll('input[type="checkbox"]');if($.length>0){console.log(`[Jobblixor DEBUG] Found ${$.length} availability checkboxes - checking all`),$.forEach(T=>{T.checked||(T.checked=!0,T.click(),T.dispatchEvent(new Event("change",{bubbles:!0})),console.log(`[Jobblixor DEBUG] Checked availability option: ${T.value||T.id}`))}),o++;return}}const a=d.querySelectorAll('input[type="radio"]');if(Ee(a,i,l)){o++;return}const c=d.querySelectorAll("select");if(ke(c,i,l)){o++;return}const p=d.querySelectorAll('input[type="checkbox"]');Ce(p,i)&&o++}}else console.log(`[Jobblixor DEBUG] No rule matched for: "${l}" - applying fallback logic`),De(t,l)&&o++}),ye(e),console.log(`[Jobblixor DEBUG] Answered ${o} screening questions total`),o}function me(){if(console.log("[Jobblixor DEBUG] Checking if this is a resume selection page..."),!window.location.href.includes("resume-selection"))return!1;if(console.log("[Jobblixor DEBUG] Detected resume selection page"),document.querySelector('[data-testid="resume-preview"]')||document.querySelector(".resume-preview")||document.querySelector('[data-testid*="resume"]')||document.querySelector("iframe")||Array.from(document.querySelectorAll("div")).find(t=>t.textContent&&t.textContent.includes("resume")&&t.textContent.includes(".pdf")))return console.log("[Jobblixor DEBUG] Resume already uploaded, proceeding to Continue"),!0;const n=Array.from(document.querySelectorAll("button, div, label")).filter(t=>/upload.*resume|upload a resume/i.test(t.textContent||""));if(n.length>0)return n[0].click(),console.log("[Jobblixor DEBUG] Selected 'Upload a resume' option"),!0;const r=document.querySelectorAll('input[type="radio"]');for(const t of r){const l=document.querySelector(`label[for="${t.id}"]`)||t.closest("label"),s=l?l.textContent.toLowerCase():"";if(s.includes("upload")&&s.includes("resume")&&!t.checked)return t.checked=!0,t.click(),t.dispatchEvent(new Event("change",{bubbles:!0})),console.log("[Jobblixor DEBUG] Selected upload resume radio option"),!0}return console.log("[Jobblixor DEBUG] Resume appears to be ready, no action needed"),!0}function ye(e){console.log("[Jobblixor DEBUG] Directly handling demographic form elements...");const o=document.querySelectorAll('input[type="radio"]'),n=e.gender||"not declared";console.log(`[Jobblixor DEBUG] Looking for gender option: "${n}"`);for(const a of o){const u=document.querySelector(`label[for="${a.id}"]`)||a.closest("label"),c=u?u.textContent.toLowerCase().trim():a.value.toLowerCase();if((n==="male"&&c==="male"||n==="female"&&c==="female"||(n==="not declared"||!n)&&(c.includes("not declared")||c.includes("not disclosed")))&&!a.checked){a.checked=!0,a.click(),a.dispatchEvent(new Event("change",{bubbles:!0})),console.log(`[Jobblixor DEBUG] Selected gender: ${c}`);break}}const r=document.querySelectorAll("select"),t=e.ethnicity||"prefer not to answer";console.log(`[Jobblixor DEBUG] Looking for ethnicity option: "${t}"`);for(const a of r){const u=a.closest("div"),c=u?u.textContent.toLowerCase():"";if(c.includes("ethnicity")||c.includes("race")){console.log(`[Jobblixor DEBUG] Found ethnicity dropdown with ${a.options.length} options`);for(const b of a.options){const p=b.textContent.toLowerCase();if(t.includes("prefer not")&&p.includes("prefer not")||t.includes("decline")&&p.includes("decline")||t.includes("white")&&p.includes("white")||t.includes("black")&&p.includes("black")||t.includes("asian")&&p.includes("asian")||t.includes("hispanic")&&p.includes("hispanic")){a.value=b.value,a.dispatchEvent(new Event("change",{bubbles:!0})),console.log(`[Jobblixor DEBUG] Selected ethnicity: ${b.textContent}`);break}}break}}const l=e.veteran_status||"i am not a veteran";console.log(`[Jobblixor DEBUG] Looking for veteran status option: "${l}"`);const s=document.querySelectorAll('input[type="radio"]');for(const a of s){const u=document.querySelector(`label[for="${a.id}"]`)||a.closest("label"),c=u?u.textContent.toLowerCase().trim():a.value.toLowerCase(),b=a.closest("div, fieldset"),p=b?b.textContent.toLowerCase():"";if((p.includes("veteran status")||p.includes("veteran"))&&(console.log(`[Jobblixor DEBUG] Found veteran radio: "${c}"`),(l.toLowerCase().includes("not")&&(c.includes("i am not")||c.includes("not a veteran"))||l.toLowerCase().includes("do not wish")&&c.includes("do not wish")||!l.toLowerCase().includes("not")&&!l.toLowerCase().includes("do not")&&c.includes("veteran")&&!c.includes("not"))&&!a.checked)){a.checked=!0,a.click(),a.dispatchEvent(new Event("change",{bubbles:!0})),console.log(`[Jobblixor DEBUG] Selected veteran status: ${c}`);break}}const i=e.hispanic_latino||"no";console.log(`[Jobblixor DEBUG] Looking for hispanic/latino option: "${i}"`);for(const a of s){const u=document.querySelector(`label[for="${a.id}"]`)||a.closest("label"),c=u?u.textContent.toLowerCase().trim():a.value.toLowerCase(),b=a.closest("div"),p=b?b.textContent.toLowerCase():"";if((p.includes("hispanic")||p.includes("latino"))&&(i==="yes"&&c==="yes"||i==="no"&&c==="no")&&!a.checked){a.checked=!0,a.click(),a.dispatchEvent(new Event("change",{bubbles:!0})),console.log(`[Jobblixor DEBUG] Selected hispanic/latino: ${c}`);break}}console.log("[Jobblixor DEBUG] Looking for terms and conditions radio button...");for(const a of s)if(!a.checked){const u=a.closest("div, fieldset")||a.parentElement,c=u?u.textContent.toLowerCase():"";if(c.includes("employment of applicants")||c.includes("terms and conditions")||c.includes("drug test")||c.includes("lie detector")){console.log(`[Jobblixor DEBUG] Found terms radio button: "${c.substring(0,100)}..."`),a.checked=!0,a.click(),a.dispatchEvent(new Event("change",{bubbles:!0})),console.log("[Jobblixor DEBUG] Selected terms and conditions radio");break}}console.log("[Jobblixor DEBUG] Looking for 'Share these answers' checkbox...");const d=document.querySelectorAll('input[type="checkbox"]');for(const a of d)if(!a.checked){const u=a.closest("div")||a.parentElement,c=u?u.textContent.toLowerCase():"";if(c.includes("share these answers")||c.includes("consent to sharing")){console.log("[Jobblixor DEBUG] Found share answers checkbox"),a.checked=!0,a.click(),a.dispatchEvent(new Event("change",{bubbles:!0})),console.log("[Jobblixor DEBUG] Checked share answers checkbox");break}}}function we(){console.log("[Jobblixor DEBUG] Checking for standalone checkbox groups...");const e=document.querySelectorAll('input[type="checkbox"]');if(e.length>=3){console.log(`[Jobblixor DEBUG] Found ${e.length} checkboxes - checking if they're availability options`);let o=!1;const n=["nights","days","holidays","weekends","availability","shifts"];for(const r of e){const t=document.querySelector(`label[for="${r.id}"]`)||r.closest("label"),l=t?t.textContent.toLowerCase():"";if(n.some(s=>l.includes(s))){o=!0;break}}if(o){console.log("[Jobblixor DEBUG] Detected availability checkbox group - checking all options");let r=0;return e.forEach(t=>{if(!t.checked){const l=document.querySelector(`label[for="${t.id}"]`)||t.closest("label"),s=l?l.textContent.trim():t.value||t.id;t.checked=!0,t.click(),t.dispatchEvent(new Event("change",{bubbles:!0})),console.log(`[Jobblixor DEBUG] Checked availability: ${s}`),r++}}),r>0}}return!1}function Ee(e,o,n){if(e.length===0)return!1;console.log(`[Jobblixor DEBUG] Found ${e.length} radio buttons for question`);for(const r of e){let t="";const l=document.querySelector(`label[for="${r.id}"]`)||r.closest("label");if(l&&(t=l.textContent.toLowerCase().trim()),!t&&r.parentElement){const i=r.parentElement.textContent.toLowerCase().trim();i.length<20&&(t=i)}if(!t&&r.nextSibling&&(r.nextSibling.nodeType===Node.TEXT_NODE||r.nextSibling.tagName)&&(t=r.nextSibling.textContent.toLowerCase().trim()),!t&&r.value&&(t=r.value.toLowerCase().trim()),console.log(`[Jobblixor DEBUG] Radio option text: "${t}", value: "${r.value}", id: "${r.id}"`),xe(t,r.value,o,n))return r.checked?(console.log(`[Jobblixor DEBUG] Radio already selected: "${t||r.value}"`),!0):(r.checked=!0,r.click(),r.dispatchEvent(new Event("change",{bubbles:!0})),r.dispatchEvent(new Event("input",{bubbles:!0})),r.dispatchEvent(new Event("click",{bubbles:!0})),console.log(`[Jobblixor DEBUG] Selected radio: "${t||r.value}" (checked: ${r.checked})`),setTimeout(()=>{console.log(`[Jobblixor DEBUG] Radio check after timeout: ${r.checked}`)},100),!0)}return console.log("[Jobblixor DEBUG] No matching radio option found"),!1}function xe(e,o,n,r){const t=n.toString().toLowerCase().trim(),l=e.toLowerCase().trim(),s=o.toLowerCase().trim();if(console.log(`[Jobblixor DEBUG] Checking radio match: answer="${t}", text="${l}", value="${s}"`),(t==="yes"||t==="true")&&(l==="yes"||s==="yes"||l==="true"||s==="true"))return console.log("[Jobblixor DEBUG] YES match found"),!0;if((t==="no"||t==="false")&&(l==="no"||s==="no"||l==="false"||s==="false"))return console.log("[Jobblixor DEBUG] NO match found"),!0;if(t==="male"&&(l==="male"||s==="male"))return console.log("[Jobblixor DEBUG] Male gender match found"),!0;if(t==="female"&&(l==="female"||s==="female"))return console.log("[Jobblixor DEBUG] Female gender match found"),!0;if((t==="not declared"||t==="prefer not to answer")&&(l.includes("not declared")||l.includes("not disclosed")||l.includes("prefer not")))return console.log("[Jobblixor DEBUG] Not declared match found"),!0;if(r.includes("veteran")){if((t.includes("not")||t.includes("no"))&&(l.includes("not")||l.includes("no")||l.includes("i am not")))return console.log("[Jobblixor DEBUG] Not veteran match found"),!0;if(t.includes("veteran")&&l.includes("veteran")&&!l.includes("not"))return console.log("[Jobblixor DEBUG] Veteran match found"),!0}return l===t||s===t?(console.log("[Jobblixor DEBUG] Exact match found"),!0):l.includes(t)||s.includes(t)?(console.log("[Jobblixor DEBUG] Partial match found"),!0):(console.log("[Jobblixor DEBUG] No match found for this option"),!1)}function ke(e,o,n){if(e.length===0)return!1;for(const r of e){console.log(`[Jobblixor DEBUG] Found select with ${r.options.length} options`);for(const t of r.options){const l=t.textContent.toLowerCase(),s=t.value.toLowerCase();if(ve(l,s,o,n))return r.value=t.value,r.dispatchEvent(new Event("change",{bubbles:!0})),console.log(`[Jobblixor DEBUG] Selected option: "${t.textContent}"`),!0}}return!1}function ve(e,o,n,r){const t=n.toString().toLowerCase(),l=e.toLowerCase(),s=o.toLowerCase();if(console.log(`[Jobblixor DEBUG] Checking dropdown option: answer="${t}", text="${l}", value="${s}"`),r.includes("experience")&&/\d/.test(t)){const i=parseInt(t.match(/\d+/)?.[0]||"0"),d=l.match(/(\d+)[-\s]*(?:to|-)?\s*(\d+)/);if(d){const u=parseInt(d[1]),c=parseInt(d[2]);return i>=u&&i<=c}const a=l.match(/(\d+)/);if(a&&parseInt(a[1])===i||i<=1&&(l.includes("0-1")||l.includes("less than 2"))||i>=2&&i<=3&&l.includes("2-3")||i>=4&&i<=5&&l.includes("4-5")||i>=6&&l.includes("6+"))return!0}if((t==="not declared"||t==="prefer not to answer")&&(l.includes("not declared")||l.includes("prefer not")||l.includes("decline"))||t==="male"&&l.includes("male")&&!l.includes("female")||t==="female"&&l.includes("female"))return!0;if(r.includes("ethnicity")||r.includes("race")){const i={white:["white","caucasian"],black:["black","african american","african-american"],asian:["asian","pacific islander"],hispanic:["hispanic","latino"],"native american":["native american","american indian"],"prefer not to answer":["prefer not","decline","not disclosed"]};for(const[d,a]of Object.entries(i))if(t.includes(d.toLowerCase())&&a.some(u=>l.includes(u)))return!0}return!!(l.includes(t)||s.includes(t))}function Ce(e,o,n){return e.length===0?!1:o.toString().toLowerCase()==="yes"||o.toString().toLowerCase()==="true"?(e.forEach(t=>{t.checked||(t.checked=!0,t.click(),t.dispatchEvent(new Event("change",{bubbles:!0})),console.log("[Jobblixor DEBUG] Checked checkbox"))}),!0):!1}function De(e,o){console.log(`[Jobblixor DEBUG] Handling unknown question with fallback logic: "${o}"`);const n=e.closest("div, fieldset, form")||e.parentElement;if(!n)return!1;if(o.includes("availability")||o.includes("work")||o.includes("schedule")){const l=n.querySelectorAll('input[type="checkbox"]');if(l.length>0){console.log(`[Jobblixor DEBUG] Fallback: Found ${l.length} checkboxes - checking all for maximum availability`);let s=!1;return l.forEach(i=>{if(!i.checked){i.checked=!0,i.click(),i.dispatchEvent(new Event("change",{bubbles:!0}));const d=document.querySelector(`label[for="${i.id}"]`)||i.closest("label"),a=d?d.textContent.trim():i.value||i.id;console.log(`[Jobblixor DEBUG] Fallback checked: ${a}`),s=!0}}),s}}const r=n.querySelectorAll('input[type="radio"]');if(r.length>0){console.log(`[Jobblixor DEBUG] Fallback: Found ${r.length} radio options - selecting most attractive option`);const l=["both full time and part time","both","full time and part time","full time","full-time","yes","available","immediately","anytime","flexible","open","willing"];for(const s of l)for(const i of r){const d=document.querySelector(`label[for="${i.id}"]`)||i.closest("label");let a="";if(d?a=d.textContent.toLowerCase().trim():i.parentElement?a=i.parentElement.textContent.toLowerCase().trim():i.value&&(a=i.value.toLowerCase().trim()),a.includes(s)&&!i.checked)return i.checked=!0,i.click(),i.dispatchEvent(new Event("change",{bubbles:!0})),console.log(`[Jobblixor DEBUG] Fallback selected attractive option: "${a}"`),!0}if(r[0]&&!r[0].checked)return r[0].checked=!0,r[0].click(),r[0].dispatchEvent(new Event("change",{bubbles:!0})),console.log("[Jobblixor DEBUG] Fallback selected first radio option"),!0}const t=n.querySelectorAll("select");if(t.length>0)for(const l of t){console.log(`[Jobblixor DEBUG] Fallback: Found select with ${l.options.length} options`);const s=["both","full time and part time","all shifts","any time","full time","immediately","asap","flexible"];for(const i of s)for(const d of l.options)if(d.textContent.toLowerCase().includes(i))return l.value=d.value,l.dispatchEvent(new Event("change",{bubbles:!0})),console.log(`[Jobblixor DEBUG] Fallback selected attractive dropdown option: "${d.textContent}"`),!0;if(l.options.length>1)return l.value=l.options[1].value,l.dispatchEvent(new Event("change",{bubbles:!0})),console.log(`[Jobblixor DEBUG] Fallback selected second dropdown option: "${l.options[1].textContent}"`),!0}return console.log("[Jobblixor DEBUG] Fallback: No actionable inputs found for this question"),!1}async function Se(){console.log("[Jobblixor DEBUG] Force-checking any remaining unchecked checkboxes...");const e=document.querySelectorAll('input[type="checkbox"]:not(:checked)');console.log(`[Jobblixor DEBUG] Found ${e.length} unchecked checkboxes`);let o=0;for(const n of e){if(n.offsetParent===null||n.disabled)continue;const r=document.querySelector(`label[for="${n.id}"]`)||n.closest("label");let t="";if(r)t=r.textContent.trim();else if(n.parentElement){const l=n.parentElement.textContent.trim();l.length<50&&(t=l)}else n.value?t=n.value:n.name&&(t=n.name);console.log(`[Jobblixor DEBUG] Force-checking checkbox: "${t}"`),r&&(r.click(),await new Promise(l=>setTimeout(l,100)),console.log(`[Jobblixor DEBUG] Clicked label for: "${t}"`)),n.checked=!0,n.dispatchEvent(new Event("click",{bubbles:!0})),n.dispatchEvent(new Event("change",{bubbles:!0})),n.dispatchEvent(new Event("input",{bubbles:!0})),n.focus(),n.dispatchEvent(new KeyboardEvent("keydown",{key:" ",code:"Space",bubbles:!0})),n.dispatchEvent(new KeyboardEvent("keyup",{key:" ",code:"Space",bubbles:!0})),n.click(),await new Promise(l=>setTimeout(l,150)),n.checked?(console.log(`[Jobblixor DEBUG] Successfully checked: "${t}"`),o++):(console.log(`[Jobblixor DEBUG] Failed to check: "${t}" - trying alternative approach`),n.parentElement&&(n.parentElement.click(),await new Promise(l=>setTimeout(l,100)),n.checked&&(console.log(`[Jobblixor DEBUG] Checked via parent click: "${t}"`),o++)))}return o}function Ue(){const e=Array.from(document.querySelectorAll("button, label, div, span, input")).filter(o=>/upload.*resume|upload a resume/i.test(o.textContent||o.value||o.getAttribute("aria-label")||""));for(const o of e)if(o.type==="radio"){if(!o.checked)return o.checked=!0,o.dispatchEvent(new Event("change",{bubbles:!0})),console.log("[Jobblixor DEBUG] Selected upload resume radio option"),!0}else if(o.tagName==="LABEL"){const n=o.querySelector('input[type="radio"]')||o.getAttribute("for")&&document.getElementById(o.getAttribute("for"));return n&&n.type==="radio"?(n.checked=!0,n.dispatchEvent(new Event("change",{bubbles:!0})),console.log("[Jobblixor DEBUG] Selected upload resume radio via label"),!0):(o.click(),console.log("[Jobblixor DEBUG] Clicked upload resume label/button"),!0)}else return o.click(),console.log("[Jobblixor DEBUG] Clicked upload resume element:",o.tagName),!0;return console.log("[Jobblixor DEBUG] No upload resume option found to select"),!1}function Be(){console.log("[Jobblixor DEBUG] Looking for post-upload resume options...");const e=Array.from(document.querySelectorAll('input[type="radio"]')).filter(n=>!n.checked);if(e.length>0){const n=e[0];return n.checked=!0,n.dispatchEvent(new Event("change",{bubbles:!0})),console.log("[Jobblixor DEBUG] Selected post-upload resume option:",n.value||n.id),!0}const o=Array.from(document.querySelectorAll("button, div, label, span")).filter(n=>{const r=(n.textContent||"").toLowerCase();return r.includes("option")||r.includes("select")||r.includes("choose")});for(const n of o)if(n.offsetParent!==null)return n.click(),console.log("[Jobblixor DEBUG] Clicked resume option element:",n.textContent?.trim()),!0;return console.log("[Jobblixor DEBUG] No post-upload resume options found"),!1}async function Ae(e,o=1e4){const n=Date.now();for(;Date.now()-n<o;){if(!e.disabled&&e.getAttribute("aria-disabled")!=="true")return!0;await new Promise(r=>setTimeout(r,200))}return console.log("[Jobblixor DEBUG] Element did not become enabled within timeout"),!1}async function Je(e){try{Ue(),await new Promise(b=>setTimeout(b,500));const n=await(async()=>{for(let b=0;b<12;b++){const p=document.querySelector('input[type="file"]');if(p)return p;await new Promise(C=>setTimeout(C,250))}return null})();if(!n)return console.log("[Jobblixor DEBUG] No file input found for resume upload"),{uploaded:!1,clickedContinue:!1};if(n.files&&n.files.length>0)return console.log("[Jobblixor DEBUG] File input already has a file"),{uploaded:!0,clickedContinue:!1};const r=await new Promise(b=>{chrome.runtime.sendMessage({type:"FETCH_RESUME_FILE",resumeUrl:e},b)});if(!r||!r.success)return console.error("[Jobblixor DEBUG] Resume fetch failed:",r?.error),{uploaded:!1,clickedContinue:!1};const t=r.base64,l=r.mimeType||"application/pdf",s=r.filename||"resume.pdf",i=atob(t),d=new Uint8Array(i.length);for(let b=0;b<i.length;b++)d[b]=i.charCodeAt(b);const a=new File([d],s,{type:l}),u=new DataTransfer;u.items.add(a),n.files=u.files,n.dispatchEvent(new Event("input",{bubbles:!0})),n.dispatchEvent(new Event("change",{bubbles:!0})),console.log("[Jobblixor DEBUG] Resume uploaded!"),await new Promise(b=>setTimeout(b,500)),Be(),await new Promise(b=>setTimeout(b,1e3));const c=Array.from(document.querySelectorAll('button, input[type="submit"]')).find(b=>/continue|next|submit/i.test(b.innerText||b.value));if(c)if(console.log("[Jobblixor DEBUG] Found Continue button, waiting for it to be enabled..."),await Ae(c,1e4)){const p=Date.now();return!c._lastClicked||p-c._lastClicked>2e3?(c._lastClicked=p,c.click(),console.log("[Jobblixor DEBUG] Clicked Continue button after resume upload"),{uploaded:!0,clickedContinue:!0}):(console.log("[Jobblixor DEBUG] Continue button was recently clicked, skipping"),{uploaded:!0,clickedContinue:!0})}else return console.log("[Jobblixor DEBUG] Continue button did not become enabled, may need manual intervention"),{uploaded:!0,clickedContinue:!1};else return console.log("[Jobblixor DEBUG] No Continue button found after resume upload"),{uploaded:!0,clickedContinue:!1}}catch(o){return console.error("[Jobblixor DEBUG] Resume upload failed:",o),{uploaded:!1,clickedContinue:!1}}}function _e(e){return[{value:e.first_name,keywords:["first name","given name","fname","forename"]},{value:e.last_name,keywords:["last name","surname","lname","family name"]},{value:e.email,keywords:["email","e-mail"]},{value:e.phone_number,keywords:["phone","mobile","cell"]},{value:e.location,keywords:["location","city","locality","town"]},{value:e.preferred_salary,keywords:["salary","expected pay","pay"]},{value:e.job_title_relevant_experience||"Software Engineer",keywords:["job title","position","relevant experience","job that shows relevant"]},{value:e.company_relevant_experience||"Tech Company",keywords:["company","employer","company name","previous employer"]},{value:e.over_18,keywords:["18","over 18","age","older than"]},{value:e.authorized_us,keywords:["authorized","work authorization","right to work","eligible"]},{value:e.require_sponsorship,keywords:["sponsorship","require sponsorship"]},{value:e.gender,keywords:["gender","sex"]},{value:e.ethnicity,keywords:["ethnicity","race"]},{value:e.years_experience,keywords:["years experience","experience"]},{value:e.veteran_status,keywords:["veteran","military"]},{value:e.zip_code||"10001",keywords:["zip code","zip","postal","postcode"]},{value:e.location||"New York, NY",keywords:["city","city state","locality","town"]},{value:e.street_address||"123 Main Street",keywords:["street address","address","address line","street"]},{value:"United States",keywords:["country"]},{value:e.state||"NY",keywords:["state"]}]}function Ge(e,o){let n=!1;if(e.some(r=>r.includes("phone"))){console.log(`[Jobblixor DEBUG] Looking for phone number field with value: "${o}"`);const r=document.querySelectorAll('input[type="tel"], input[name*="phone"], input[id*="phone"], input[placeholder*="phone"]');for(const t of r)if(t.type==="tel"||t.name?.toLowerCase().includes("phone")||t.id?.toLowerCase().includes("phone")||t.placeholder?.toLowerCase().includes("phone")){const l=o.replace(/\D/g,"");console.log(`[Jobblixor DEBUG] Attempting to fill phone with: "${l}"`),t.focus(),t.select(),document.execCommand("delete"),g(t,l),t.value="";for(let s=0;s<l.length;s++)t.value+=l[s],t.dispatchEvent(new Event("input",{bubbles:!0}));t.dispatchEvent(new Event("change",{bubbles:!0})),t.dispatchEvent(new Event("blur",{bubbles:!0})),setTimeout(()=>{console.log(`[Jobblixor DEBUG] Phone field value after fill: "${t.value}"`),t.value===l?console.log("[Jobblixor DEBUG] Phone number successfully filled and verified"):(console.log("[Jobblixor DEBUG] Phone number may not have stuck properly"),t.value=l,t.dispatchEvent(new Event("input",{bubbles:!0})),t.dispatchEvent(new Event("change",{bubbles:!0})))},500),n=!0;break}n||console.log("[Jobblixor DEBUG] No tel input found, trying general phone field detection")}if(e.some(r=>r.includes("zip"))){const r=document.querySelectorAll('input[name*="zip"], input[id*="zip"], input[placeholder*="zip"], input[name*="postal"], input[id*="postal"], input[placeholder*="postal"]');for(const t of r){g(t,o),console.log(`[Jobblixor DEBUG] Filled zip code: "${o}"`),n=!0;break}}if(e.some(r=>r.includes("city"))){const r=document.querySelectorAll('input[name*="city"], input[id*="city"], input[placeholder*="city"], input[name*="state"], input[id*="state"], input[placeholder*="state"]');for(const t of r){g(t,o),console.log(`[Jobblixor DEBUG] Filled city/state: "${o}"`),n=!0;break}}if(e.some(r=>r.includes("address"))){const r=document.querySelectorAll('input[name*="address"], input[id*="address"], input[placeholder*="address"], input[name*="street"], input[id*="street"], input[placeholder*="street"]');for(const t of r){g(t,o),console.log(`[Jobblixor DEBUG] Filled street address: "${o}"`),n=!0;break}}return n||document.querySelectorAll('input[type="text"], input[type="email"], input[type="number"], input:not([type]), textarea, select').forEach(r=>{const t=[r.labels?.[0]?.innerText?.toLowerCase()||"",r.placeholder?.toLowerCase()||"",r.name?.toLowerCase()||"",r.id?.toLowerCase()||"",r.getAttribute("data-testid")?.toLowerCase()||"",r.getAttribute("aria-label")?.toLowerCase()||""];e.some(l=>t.some(s=>s.includes(l)))&&(g(r,o),n=!0,console.log(`[Jobblixor DEBUG] [Native Setter] Filled "${e.join("/")}" with "${o}"`))}),n||document.querySelectorAll('input[type="radio"], select').forEach(r=>{const t=[r.labels?.[0]?.innerText?.toLowerCase()||"",r.name?.toLowerCase()||"",r.id?.toLowerCase()||"",r.getAttribute("data-testid")?.toLowerCase()||"",r.getAttribute("aria-label")?.toLowerCase()||""];if(e.some(l=>t.some(s=>s.includes(l)))&&(r.type==="radio"&&(r.value?.toLowerCase()===o?.toLowerCase()||t.some(l=>l.includes(o?.toLowerCase())))&&(r.checked=!0,r.dispatchEvent(new Event("change",{bubbles:!0})),n=!0,console.log(`[Jobblixor DEBUG] Checked radio "${e.join("/")}" as "${o}"`)),r.tagName==="SELECT")){for(const l of r.options)if(l.text.toLowerCase().includes(o.toLowerCase())){r.value=l.value,r.dispatchEvent(new Event("change",{bubbles:!0})),n=!0,console.log(`[Jobblixor DEBUG] Selected option "${e.join("/")}" as "${o}"`);break}}}),n}function g(e,o){if(e.type==="tel"||e.name?.toLowerCase().includes("phone")||e.id?.toLowerCase().includes("phone")||e.placeholder?.toLowerCase().includes("phone")){console.log(`[Jobblixor DEBUG] Using enhanced phone input method for: "${o}"`),e.focus(),e.select();const n=e.value;e.value=o;const r=e._valueTracker;r&&r.setValue(n),e.dispatchEvent(new Event("focus",{bubbles:!0})),e.dispatchEvent(new Event("input",{bubbles:!0,cancelable:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})),e.dispatchEvent(new Event("blur",{bubbles:!0}));for(let t=0;t<o.length;t++){const l=o[t];e.dispatchEvent(new KeyboardEvent("keydown",{key:l,code:`Digit${l}`,bubbles:!0})),e.dispatchEvent(new KeyboardEvent("keyup",{key:l,code:`Digit${l}`,bubbles:!0}))}setTimeout(()=>{e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})),console.log(`[Jobblixor DEBUG] Phone input final value: "${e.value}"`)},100)}else{const n=e.value;e.value=o;const r=new Event("input",{bubbles:!0}),t=e._valueTracker;t&&t.setValue(n),e.dispatchEvent(r)}}function Le(){console.log("[Jobblixor DEBUG] Checking for agreement/terms checkboxes..."),document.querySelectorAll('input[type="checkbox"]').forEach(e=>{if(!e.checked){const o=document.querySelector(`label[for="${e.id}"]`)||e.closest("label"),n=e.parentElement;let r="";o?r=o.textContent.toLowerCase():n&&(r=n.textContent.toLowerCase()),console.log(`[Jobblixor DEBUG] Found unchecked checkbox with context: "${r.substring(0,100)}..."`),r.includes("terms")||r.includes("conditions")||r.includes("agree")||r.includes("consent")||r.includes("share")||r.includes("policy")||r.includes("understand")||r.includes("acknowledge")?(e.checked=!0,o&&o.click(),e.click(),e.dispatchEvent(new Event("change",{bubbles:!0})),e.dispatchEvent(new Event("input",{bubbles:!0})),console.log("[Jobblixor DEBUG] Checked agreement/terms checkbox")):console.log("[Jobblixor DEBUG] Skipped checkbox (not terms/agreement related)")}})}function $e(){const e=document.querySelectorAll('input[type="text"], input[type="email"], input[type="number"], textarea, select, input[type="radio"], input[type="checkbox"]');return console.log("[Jobblixor DEBUG] Fillable inputs detected:",e.length),e.length>0}function f(e,o){e&&chrome.runtime.sendMessage({type:"LOG_PROGRESS_UPDATE",email:e,message:o,timestamp:Date.now()},n=>{n?.success||console.error("[Jobblixor DEBUG] Failed to log progress:",n?.error)})}(async function(){if(document.readyState!=="complete"&&await new Promise(t=>window.addEventListener("load",t,{once:!0})),await m(2e3),await X()){console.log("[Orchestrator] Anomaly detected on page load - recovery attempted");return}if((await M()).isRunning){console.log("[Orchestrator] Another orchestrator already running, skipping recovery");return}const r=await K();r&&r.isRunning&&r.waitingForSearch&&!y&&(console.log("[Orchestrator] Detected search navigation, resuming orchestrator:",r),w=!1,await H(r.userProfile,r))})();function Te(){chrome.storage.local.set({jobblixor_global_stop:!0}),setTimeout(()=>{chrome.storage.local.remove(["jobblixor_global_stop"]),console.log("[Cleanup] Auto-cleared global stop flag")},3e4)}let Q=0;const qe=5e3;function Oe(){console.log("[Jobblixor DEBUG] Checking for error popups...");const e=['[role="dialog"]',".modal",".error-modal",".alert",'[data-testid*="error"]','[data-testid*="modal"]'];for(const o of e){const n=document.querySelector(o);if(n&&(n.textContent.toLowerCase().includes("something went wrong")||n.textContent.toLowerCase().includes("save job"))){console.log("[Jobblixor DEBUG] Found error popup, attempting to dismiss and continue...");const r=n.querySelectorAll('button, [role="button"]');for(const l of r){const s=l.textContent.toLowerCase(),i=l.getAttribute("aria-label")?.toLowerCase()||"";if((s.includes("close")||s.includes("dismiss")||i.includes("close"))&&!s.includes("save")&&!s.includes("exit"))return l.click(),console.log("[Jobblixor DEBUG] Clicked close button, continuing automation"),!0}const t=document.querySelector(".modal-backdrop, .overlay");return t?(t.click(),console.log("[Jobblixor DEBUG] Clicked backdrop to dismiss popup"),!0):(document.dispatchEvent(new KeyboardEvent("keydown",{key:"Escape"})),console.log("[Jobblixor DEBUG] Pressed Escape to dismiss popup"),!0)}}return!1}function v(e=500,o=2e3){const n=Math.random()*(o-e)+e;return new Promise(r=>setTimeout(r,n))}function Ie(e){return e.dispatchEvent(new MouseEvent("mouseover",{bubbles:!0})),new Promise(o=>{setTimeout(()=>{e.dispatchEvent(new MouseEvent("mousedown",{bubbles:!0})),setTimeout(()=>{e.dispatchEvent(new MouseEvent("mouseup",{bubbles:!0})),e.click(),o()},50+Math.random()*100)},100+Math.random()*200)})}async function X(){const e=window.location.href;if(e.includes("/jobs?q="))return console.log("[Orchestrator] Skipping anomaly detection - this is a search results page"),!1;if(e==="https://www.indeed.com/"||e.includes("www.indeed.com/?")||e.includes("verification")||e.includes("cloudflare")||e.includes("challenge"))return console.log("[Orchestrator] Skipping anomaly detection on homepage/verification page"),!1;await new Promise(i=>setTimeout(i,2e3)),console.log("[Orchestrator] Checking for page anomalies...");const o=["Profile insights","Do you have a valid","Teaching Certification","Bachelor's degree","Here's how the job qualifications align","Here's how the job details align","Something went wrong","Page not found","Job no longer available","Tell us about yourself","Help us improve","Rate your experience"],n=document.body.textContent||"",r=document.title||"",t=o.some(i=>n.includes(i)||r.includes(i)),s=["/profile-insights","/job-qualifications","/error","/survey","/feedback"].some(i=>e.includes(i));if(t||s){console.log("[Orchestrator] ANOMALY DETECTED - attempting recovery"),console.log("[Orchestrator] Page text sample:",n.substring(0,200)),console.log("[Orchestrator] Current URL:",e);const i=document.querySelector('a[href="/"]')||document.querySelector('a[href="https://www.indeed.com"]')||document.querySelector(".icl-Header-logo")||document.querySelector('[data-testid="header-logo"]')||Array.from(document.querySelectorAll("a")).find(c=>c.textContent.toLowerCase().includes("home")||c.href.includes("indeed.com")&&c.href.endsWith("/"));if(i)return console.log("[Orchestrator] Found home button, clicking..."),i.click(),await m(3e3),!0;console.log("[Orchestrator] No home button found, navigating to job search...");const d=encodeURIComponent("teacher"),a=encodeURIComponent("New York, NY"),u=`https://www.indeed.com/jobs?q=${d}&l=${a}`;return window.location.href=u,await m(3e3),!0}return!1}chrome.storage.local.get(["last_application_completion"],e=>{const o=e.last_application_completion;o&&Date.now()-o.timestamp>12e4&&(chrome.storage.local.remove(["last_application_completion"]),console.log("[Cleanup] Cleared stale application completion flag"))})})());
